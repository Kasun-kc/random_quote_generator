import 'package:http/http.dart' as http;
import 'dart:convert';
import '../models/quote.dart';

class QuoteService {
  static const String wisdomQuotesUrl = 'https://api.wisdomquotes.com/random';
  static const String inspiroUrl = 'https://inspirobot.me/api?generate=true';
  static const String britannicaUrl =
      'https://www.britannica.com/api/on-this-day';

  Future<Quote> fetchRandomQuote() async {
    try {
      // Randomly choose a source
      final sources = ['wisdom', 'inspiro', 'britannica'];
      sources.shuffle();

      switch (sources.first) {
        case 'wisdom':
          return await _fetchWisdomQuote();
        case 'inspiro':
          return await _fetchInspiroQuote();
        case 'britannica':
          return await _fetchBritannicaQuote();
        default:
          throw Exception('Unknown source');
      }
    } catch (e) {
      // Fallback to local quotes if API fails
      return Quote(
        text: "Failed to fetch quote. Please try again.",
        author: "System",
        category: "Error",
        details: "There was an error fetching the quote.",
        source: "Local",
      );
    }
  }

  Future<Quote> _fetchWisdomQuote() async {
    // Note: This is a mock implementation since the actual API might not be available
    final response =
        await http.get(Uri.parse('https://api.quotable.io/random'));

    if (response.statusCode == 200) {
      final data = json.decode(response.body);
      return Quote(
        text: data['content'],
        author: data['author'],
        category: data['tags'][0],
        details: "From WisdomQuotes.com",
        source: "WisdomQuotes",
      );
    }
    throw Exception('Failed to load wisdom quote');
  }

  Future<Quote> _fetchInspiroQuote() async {
    // Mock implementation
    final response =
        await http.get(Uri.parse('https://api.quotable.io/random'));

    if (response.statusCode == 200) {
      final data = json.decode(response.body);
      return Quote(
        text: data['content'],
        author: 'InspirobotAI',
        category: 'AI Generated',
        details: "Generated by AI",
        source: "Inspirobot",
      );
    }
    throw Exception('Failed to load inspiro quote');
  }

  Future<Quote> _fetchBritannicaQuote() async {
    // Mock implementation
    final response =
        await http.get(Uri.parse('https://api.quotable.io/random'));

    if (response.statusCode == 200) {
      final data = json.decode(response.body);
      return Quote(
        text: data['content'],
        author: data['author'],
        category: 'Historical',
        details: "From Britannica's On This Day",
        source: "Britannica",
      );
    }
    throw Exception('Failed to load britannica quote');
  }
}
